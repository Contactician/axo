#target Illustrator#targetengine main//  Left View;// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -var ang = 30; // define rotation angle// Check that a document is open and that at least 1 pathItem is selectedif ( app.documents.length > 0 && app.activeDocument.pathItems.length > 0 ){    // Assign a variable as the active document    thisDoc = app.activeDocument;    // Cycle through all selected objects in the active document    for ( i = 0; i < thisDoc.selection.length; i++ ){    // Assign each objects    selectedObject=thisDoc.selection[i];    // Rotate    selectedObject.rotate(30);        var im = app.getIdentityMatrix();    //im.mValueB = .5; // skew y 50%    DeltaAngToRad  = toRadians(-30);    im.mValueC = -1*(Math.tan(DeltaAngToRad));    // im.mValueC = -.57735; // skew x 57.735% == 30Â°deg    selectedObject.transform (im, true, true, true, true, 1, undefined);        // Scale Y    AngToRad = toRadians(30);    scale2 = Math.cos(AngToRad)*100;    revscale2 = 100*(100 / scale2);    // alert(revscale2);        selectedObject.resize(100,revscale2);        }}function toDegrees (angle) {  return angle * (180 / Math.PI);}function toRadians (angle) {  return angle * (Math.PI / 180);}// Reciprocal of COSINEfunction sec(aValue){return 1/Math.cos(aValue);}// Register the new functionMath.constructor.prototype.sec = sec;// Reciprocal of TANGENTfunction cot(aValue){return 1/Math.tan(aValue);}// Register the new functionMath.constructor.prototype.cot = cot;// Reciprocal of SINEfunction cosec(aValue){return 1/Math.sin(aValue);}// Register the new functionMath.constructor.prototype.cosec = cosec;